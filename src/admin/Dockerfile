# Build stage
FROM node:22-alpine3.20 AS builder

WORKDIR /app

# Accept environment variables from GitHub Actions
ARG NEXT_PUBLIC_BRAND_PRODUCT_NAME
ARG NEXT_PUBLIC_BRAND_COLOR
ARG NEXT_PUBLIC_CENTRIFUGO_URL
ARG NEXT_PUBLIC_GRAPHQL_API_URL
ARG NEXT_PUBLIC_GRAPHQL_ADMIN_API_URL
ARG NEXT_PUBLIC_GRAPHQL_ADMIN_PLAYGROUND_URL
ARG NEXT_PUBLIC_GRAPHQL_QUERY_API_URL
ARG NEXT_PUBLIC_GRAPHQL_QUERY_PLAYGROUND_URL

ENV NEXT_PUBLIC_BRAND_PRODUCT_NAME=$NEXT_PUBLIC_BRAND_PRODUCT_NAME
ENV NEXT_PUBLIC_BRAND_COLOR=$NEXT_PUBLIC_BRAND_COLOR
ENV NEXT_PUBLIC_CENTRIFUGO_URL=$NEXT_PUBLIC_CENTRIFUGO_URL
ENV NEXT_PUBLIC_GRAPHQL_API_URL=$NEXT_PUBLIC_GRAPHQL_API_URL
ENV NEXT_PUBLIC_GRAPHQL_ADMIN_API_URL=$NEXT_PUBLIC_GRAPHQL_ADMIN_API_URL
ENV NEXT_PUBLIC_GRAPHQL_ADMIN_PLAYGROUND_URL=$NEXT_PUBLIC_GRAPHQL_ADMIN_PLAYGROUND_URL
ENV NEXT_PUBLIC_GRAPHQL_QUERY_API_URL=$NEXT_PUBLIC_GRAPHQL_QUERY_API_URL
ENV NEXT_PUBLIC_GRAPHQL_QUERY_PLAYGROUND_URL=$NEXT_PUBLIC_GRAPHQL_QUERY_PLAYGROUND_URL


# Install dependencies
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Copy the rest of the app
COPY . .

# Set production mode
ENV NODE_ENV=production

# Build the app
RUN yarn run build

# Runtime stage
FROM node:22-alpine3.20 AS runner

WORKDIR /app

# Copy built files and dependencies
COPY --from=builder /app/.next .next
COPY --from=builder /app/node_modules node_modules
COPY --from=builder /app/public public
COPY --from=builder /app/package.json package.json

# Expose port
EXPOSE 3000

# Start the application
CMD ["yarn", "start"]
