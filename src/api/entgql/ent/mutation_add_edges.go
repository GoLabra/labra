// Code generated by internal template, DO NOT EDIT.

package ent

import (
	"fmt"

	"github.com/GoLabra/labra/src/api/entgql/ent/role"
	"github.com/GoLabra/labra/src/api/entgql/ent/user"
)

// AddEdges sets the value of a field with the given name. It returns an error if
// the edge is not defined in the schema
func (m *FileMutation) AddEdges(name string, values []string) error {
	switch name {
	}
	return fmt.Errorf("unknown File edge %s", name)
}

// AddEdges sets the value of a field with the given name. It returns an error if
// the edge is not defined in the schema
func (m *PermissionMutation) AddEdges(name string, values []string) error {
	switch name {
	}
	return fmt.Errorf("unknown Permission edge %s", name)
}

// AddEdges sets the value of a field with the given name. It returns an error if
// the edge is not defined in the schema
func (m *RoleMutation) AddEdges(name string, values []string) error {
	switch name {
	case role.EdgeUserRoles:
		m.AddUserRoleIDs(values...)
		return nil
	case role.EdgePermissions:
		m.AddPermissionIDs(values...)
		return nil
	}
	return fmt.Errorf("unknown Role edge %s", name)
}

// AddEdges sets the value of a field with the given name. It returns an error if
// the edge is not defined in the schema
func (m *UserMutation) AddEdges(name string, values []string) error {
	switch name {
	case user.EdgeRefCreatedBy:
		m.AddRefCreatedByIDs(values...)
		return nil
	case user.EdgeRefUpdatedBy:
		m.AddRefUpdatedByIDs(values...)
		return nil
	case user.EdgeRoles:
		m.AddRoleIDs(values...)
		return nil
	}
	return fmt.Errorf("unknown User edge %s", name)
}
