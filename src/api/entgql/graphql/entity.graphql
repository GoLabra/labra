enum AppStatus {
    UP
    GENERATING
    REVERTING
    RESTARTING
    FATAL
}

type Subscription {
    appStatus: AppStatus!
    entities: [Entity!]
}

type Query {
    entities: [Entity!]
    entity(where: EntityWhereUniqueInput): Entity 
    fields: [Field!]
}

type Mutation {
    createEntity(data: CreateEntityInput!): Entity!
    updateEntity(where: EntityWhereUniqueInput!, data: UpdateEntityInput!): Entity!
    deleteEntity(where: EntityWhereUniqueInput!): Entity!
}

type Entity  {
    df: String!
    name: String!
    pluralName: String!
    caption: String!
    owner: EntityOwner!
    displayField: Field!
    fields: [Field!]
    edges: [Edge!]
}

input CreateEntityInput {
    caption: String!
    displayField: FieldWhereUniqueInput!
    fields: CreateManyFieldsInput
    edges: CreateManyEdgesInput
}

input UpdateEntityInput {
    caption: String
    displayField: FieldWhereUniqueInput
    fields: UpdateManyFieldsInput
    edges: UpdateManyEdgesInput
}

input EntityWhereUniqueInput {
    name: String
    caption: String
}

enum EntityOwner {
    Admin
    User
}

enum RelationType {
	One
	Many
	OneToOne
	OneToMany
	ManyToOne
	ManyToMany
}

type Field  {
    name: String!
    caption: String!
    type: String!
    required: Boolean
    unique: Boolean
    defaultValue: String
    min: String
    max: String
    private: Boolean
    acceptedValues: [String]
}

input CreateManyFieldsInput {
    create: [CreateFieldInput!]
}

input UpdateManyFieldsInput {
    create: [CreateFieldInput!]
    update: [UpdateOneFieldInput!]
    delete: [FieldWhereUniqueInput!]
}

input UpdateOneFieldInput {
    where: FieldWhereUniqueInput!
    data: UpdateFieldInput!
}

input FieldWhereUniqueInput {
    name: String
    caption: String
}

input CreateFieldInput {
    caption: String!
    type: String!
    required: Boolean
    unique: Boolean
    defaultValue: String
    min: String
    max: String
    private: Boolean
    acceptedValues: [String]
}

input UpdateFieldInput {
    caption: String
    required: Boolean
    unique: Boolean
    defaultValue: String
    min: String
    max: String
    private: Boolean
    acceptedValues: [String]
}

type Edge {
    name: String!
    caption: String!
    relatedEntity: Entity!
    belongsToCaption: String
    required: Boolean
    relationType: RelationType
    private: Boolean
}

input CreateManyEdgesInput {
    create: [CreateEdgeInput!]
}

input UpdateManyEdgesInput {
    create: [CreateEdgeInput!]
    update: [UpdateOneEdgeInput!]
    delete: [EdgeWhereUniqueInput!]
}

input UpdateOneEdgeInput {
	where: EdgeWhereUniqueInput!
	data:  UpdateEdgeInput!
}

input EdgeWhereUniqueInput {
    name: String
    caption: String
}

input EntityConnectInput {
    connect: EntityWhereUniqueInput!
}

input CreateEdgeInput {
    caption: String!
    relatedEntity: EntityConnectInput!
    required: Boolean
    relationType: RelationType!
    belongsToCaption: String
    private: Boolean
}

input UpdateEdgeInput {
    caption: String
    required: Boolean
    private: Boolean
}
