directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateFileInput is used for create File object.
Input was generated by ent.
"""
input CreateFileInput {
  createdAt: DateTime
  updatedAt: DateTime
  caption: String
  name: String!
  storageFileName: String!
  size: Int!
  content: String!
  createdByID: ID
  updatedByID: ID
}
"""
CreatePermissionInput is used for create Permission object.
Input was generated by ent.
"""
input CreatePermissionInput {
  createdAt: DateTime
  updatedAt: DateTime
  entity: String!
  operation: String
  createdByID: ID
  updatedByID: ID
  roleID: ID
}
"""
CreateRoleInput is used for create Role object.
Input was generated by ent.
"""
input CreateRoleInput {
  name: String!
  userRoleIDs: [ID!]
  permissionIDs: [ID!]
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  name: String
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  roleIDs: [ID!]
  defaultRoleID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type File implements Node {
  id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  caption: String
  name: String!
  storageFileName: String!
  size: Int!
  content: String!
  createdBy: User
  updatedBy: User
}
"""
A connection to a list of items.
"""
type FileConnection {
  """
  A list of edges.
  """
  edges: [FileEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type FileEdge {
  """
  The item at the end of the edge.
  """
  node: File
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for File connections
"""
input FileOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Files.
  """
  field: FileOrderField!
}
"""
Properties by which File connections can be ordered.
"""
enum FileOrderField {
  id
  createdAt
  updatedAt
  caption
  name
  storageFileName
  size
}
"""
FileWhereInput is used for filtering File objects.
Input was generated by ent.
"""
input FileWhereInput {
  not: FileWhereInput
  and: [FileWhereInput!]
  or: [FileWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: DateTime
  createdAtNEQ: DateTime
  createdAtIn: [DateTime!]
  createdAtNotIn: [DateTime!]
  createdAtGT: DateTime
  createdAtGTE: DateTime
  createdAtLT: DateTime
  createdAtLTE: DateTime
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: DateTime
  updatedAtNEQ: DateTime
  updatedAtIn: [DateTime!]
  updatedAtNotIn: [DateTime!]
  updatedAtGT: DateTime
  updatedAtGTE: DateTime
  updatedAtLT: DateTime
  updatedAtLTE: DateTime
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  caption field predicates
  """
  caption: String
  captionNEQ: String
  captionIn: [String!]
  captionNotIn: [String!]
  captionGT: String
  captionGTE: String
  captionLT: String
  captionLTE: String
  captionContains: String
  captionHasPrefix: String
  captionHasSuffix: String
  captionIsNil: Boolean
  captionNotNil: Boolean
  captionEqualFold: String
  captionContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  storage_file_name field predicates
  """
  storageFileName: String
  storageFileNameNEQ: String
  storageFileNameIn: [String!]
  storageFileNameNotIn: [String!]
  storageFileNameGT: String
  storageFileNameGTE: String
  storageFileNameLT: String
  storageFileNameLTE: String
  storageFileNameContains: String
  storageFileNameHasPrefix: String
  storageFileNameHasSuffix: String
  storageFileNameEqualFold: String
  storageFileNameContainsFold: String
  """
  size field predicates
  """
  size: Int
  sizeNEQ: Int
  sizeIn: [Int!]
  sizeNotIn: [Int!]
  sizeGT: Int
  sizeGTE: Int
  sizeLT: Int
  sizeLTE: Int
  """
  content field predicates
  """
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentEqualFold: String
  contentContainsFold: String
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  updated_by edge predicates
  """
  hasUpdatedBy: Boolean
  hasUpdatedByWith: [UserWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/GoLabra/labra/src/api/entgql/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Permission implements Node {
  id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  entity: String!
  operation: String!
  createdBy: User
  updatedBy: User
  role: Role
}
"""
A connection to a list of items.
"""
type PermissionConnection {
  """
  A list of edges.
  """
  edges: [PermissionEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PermissionEdge {
  """
  The item at the end of the edge.
  """
  node: Permission
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Permission connections
"""
input PermissionOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Permissions.
  """
  field: PermissionOrderField!
}
"""
Properties by which Permission connections can be ordered.
"""
enum PermissionOrderField {
  id
  entity
  operation
}
"""
PermissionWhereInput is used for filtering Permission objects.
Input was generated by ent.
"""
input PermissionWhereInput {
  not: PermissionWhereInput
  and: [PermissionWhereInput!]
  or: [PermissionWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: DateTime
  createdAtNEQ: DateTime
  createdAtIn: [DateTime!]
  createdAtNotIn: [DateTime!]
  createdAtGT: DateTime
  createdAtGTE: DateTime
  createdAtLT: DateTime
  createdAtLTE: DateTime
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: DateTime
  updatedAtNEQ: DateTime
  updatedAtIn: [DateTime!]
  updatedAtNotIn: [DateTime!]
  updatedAtGT: DateTime
  updatedAtGTE: DateTime
  updatedAtLT: DateTime
  updatedAtLTE: DateTime
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  entity field predicates
  """
  entity: String
  entityNEQ: String
  entityIn: [String!]
  entityNotIn: [String!]
  entityGT: String
  entityGTE: String
  entityLT: String
  entityLTE: String
  entityContains: String
  entityHasPrefix: String
  entityHasSuffix: String
  entityEqualFold: String
  entityContainsFold: String
  """
  operation field predicates
  """
  operation: String
  operationNEQ: String
  operationIn: [String!]
  operationNotIn: [String!]
  operationGT: String
  operationGTE: String
  operationLT: String
  operationLTE: String
  operationContains: String
  operationHasPrefix: String
  operationHasSuffix: String
  operationEqualFold: String
  operationContainsFold: String
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  updated_by edge predicates
  """
  hasUpdatedBy: Boolean
  hasUpdatedByWith: [UserWhereInput!]
  """
  role edge predicates
  """
  hasRole: Boolean
  hasRoleWith: [RoleWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
}
type Role implements Node {
  id: ID!
  name: String!
  createdAt: Time
  updatedAt: Time
  createdBy: User
  updatedBy: User
  userRoles: [User!]
  permissions: [Permission!]
}
"""
A connection to a list of items.
"""
type RoleConnection {
  """
  A list of edges.
  """
  edges: [RoleEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type RoleEdge {
  """
  The item at the end of the edge.
  """
  node: Role
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Role connections
"""
input RoleOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Roles.
  """
  field: RoleOrderField!
}
"""
Properties by which Role connections can be ordered.
"""
enum RoleOrderField {
  id
  name
  createdAt
  updatedAt
}
"""
RoleWhereInput is used for filtering Role objects.
Input was generated by ent.
"""
input RoleWhereInput {
  not: RoleWhereInput
  and: [RoleWhereInput!]
  or: [RoleWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  updated_by edge predicates
  """
  hasUpdatedBy: Boolean
  hasUpdatedByWith: [UserWhereInput!]
  """
  user_roles edge predicates
  """
  hasUserRoles: Boolean
  hasUserRolesWith: [UserWhereInput!]
  """
  permissions edge predicates
  """
  hasPermissions: Boolean
  hasPermissionsWith: [PermissionWhereInput!]
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateFileInput is used for update File object.
Input was generated by ent.
"""
input UpdateFileInput {
  createdAt: DateTime
  clearCreatedAt: Boolean
  updatedAt: DateTime
  clearUpdatedAt: Boolean
  caption: String
  clearCaption: Boolean
  name: String
  storageFileName: String
  size: Int
  content: String
  createdByID: ID
  clearCreatedBy: Boolean
  updatedByID: ID
  clearUpdatedBy: Boolean
}
"""
UpdatePermissionInput is used for update Permission object.
Input was generated by ent.
"""
input UpdatePermissionInput {
  createdAt: DateTime
  clearCreatedAt: Boolean
  updatedAt: DateTime
  clearUpdatedAt: Boolean
  entity: String
  operation: String
  createdByID: ID
  clearCreatedBy: Boolean
  updatedByID: ID
  clearUpdatedBy: Boolean
  roleID: ID
  clearRole: Boolean
}
"""
UpdateRoleInput is used for update Role object.
Input was generated by ent.
"""
input UpdateRoleInput {
  name: String
  addUserRoleIDs: [ID!]
  removeUserRoleIDs: [ID!]
  clearUserRoles: Boolean
  addPermissionIDs: [ID!]
  removePermissionIDs: [ID!]
  clearPermissions: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  name: String
  clearName: Boolean
  email: String
  password: String
  firstName: String
  lastName: String
  addRoleIDs: [ID!]
  removeRoleIDs: [ID!]
  clearRoles: Boolean
  defaultRoleID: ID
  clearDefaultRole: Boolean
}
type User implements Node {
  id: ID!
  name: String
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  createdAt: Time
  updatedAt: Time
  createdBy: User
  updatedBy: User
  roles: [Role!]
  defaultRole: Role
}
"""
A connection to a list of items.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for User connections
"""
input UserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Users.
  """
  field: UserOrderField!
}
"""
Properties by which User connections can be ordered.
"""
enum UserOrderField {
  id
  name
  email
  firstName
  lastName
  createdAt
  updatedAt
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  password field predicates
  """
  password: String
  passwordNEQ: String
  passwordIn: [String!]
  passwordNotIn: [String!]
  passwordGT: String
  passwordGTE: String
  passwordLT: String
  passwordLTE: String
  passwordContains: String
  passwordHasPrefix: String
  passwordHasSuffix: String
  passwordEqualFold: String
  passwordContainsFold: String
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  updated_by edge predicates
  """
  hasUpdatedBy: Boolean
  hasUpdatedByWith: [UserWhereInput!]
  """
  roles edge predicates
  """
  hasRoles: Boolean
  hasRolesWith: [RoleWhereInput!]
  """
  default_role edge predicates
  """
  hasDefaultRole: Boolean
  hasDefaultRoleWith: [RoleWhereInput!]
}
