// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
)

func (m *Migration) CreatedBy(ctx context.Context) (*User, error) {
	result, err := m.Edges.CreatedByOrErr()
	if IsNotLoaded(err) {
		result, err = m.QueryCreatedBy().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (m *Migration) UpdatedBy(ctx context.Context) (*User, error) {
	result, err := m.Edges.UpdatedByOrErr()
	if IsNotLoaded(err) {
		result, err = m.QueryUpdatedBy().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (r *Role) CreatedBy(ctx context.Context) (*User, error) {
	result, err := r.Edges.CreatedByOrErr()
	if IsNotLoaded(err) {
		result, err = r.QueryCreatedBy().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (r *Role) UpdatedBy(ctx context.Context) (*User, error) {
	result, err := r.Edges.UpdatedByOrErr()
	if IsNotLoaded(err) {
		result, err = r.QueryUpdatedBy().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (u *User) CreatedBy(ctx context.Context) (*User, error) {
	result, err := u.Edges.CreatedByOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryCreatedBy().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (u *User) UpdatedBy(ctx context.Context) (*User, error) {
	result, err := u.Edges.UpdatedByOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryUpdatedBy().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (u *User) Role(ctx context.Context) (*Role, error) {
	result, err := u.Edges.RoleOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryRole().Only(ctx)
	}
	return result, MaskNotFound(err)
}
