// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MigrationsColumns holds the columns for the "migrations" table.
	MigrationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"sql", "graphql", "go"}},
		{Name: "direction", Type: field.TypeEnum, Enums: []string{"up", "down"}},
		{Name: "plugin", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "migration_created_by", Type: field.TypeString, Nullable: true},
		{Name: "migration_updated_by", Type: field.TypeString, Nullable: true},
	}
	// MigrationsTable holds the schema information for the "migrations" table.
	MigrationsTable = &schema.Table{
		Name:       "migrations",
		Columns:    MigrationsColumns,
		PrimaryKey: []*schema.Column{MigrationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "migrations_users_created_by",
				Columns:    []*schema.Column{MigrationsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "migrations_users_updated_by",
				Columns:    []*schema.Column{MigrationsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"Admin", "Api"}},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "role_created_by", Type: field.TypeString, Nullable: true},
		{Name: "role_updated_by", Type: field.TypeString, Nullable: true},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "roles_users_created_by",
				Columns:    []*schema.Column{RolesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "roles_users_updated_by",
				Columns:    []*schema.Column{RolesColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_created_by", Type: field.TypeString, Nullable: true},
		{Name: "user_updated_by", Type: field.TypeString, Nullable: true},
		{Name: "user_role", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_users_created_by",
				Columns:    []*schema.Column{UsersColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_users_updated_by",
				Columns:    []*schema.Column{UsersColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_roles_role",
				Columns:    []*schema.Column{UsersColumns[7]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MigrationsTable,
		RolesTable,
		UsersTable,
	}
)

func init() {
	MigrationsTable.ForeignKeys[0].RefTable = UsersTable
	MigrationsTable.ForeignKeys[1].RefTable = UsersTable
	RolesTable.ForeignKeys[0].RefTable = UsersTable
	RolesTable.ForeignKeys[1].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[1].RefTable = UsersTable
	UsersTable.ForeignKeys[2].RefTable = RolesTable
}
