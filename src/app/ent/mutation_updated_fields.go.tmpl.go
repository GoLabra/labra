// Code generated by internal template, DO NOT EDIT.

package ent

// UpdatedFields returns all fields and edges that were changed during this mutation.
func (m *MigrationMutation) UpdatedFields() map[string]Value {
	var updatedFields = make(map[string]Value)
	if m.name != nil {
		updatedFields["name"] = m.name
	}
	if m._type != nil {
		updatedFields["type"] = m._type
	}
	if m.direction != nil {
		updatedFields["direction"] = m.direction
	}
	if m.plugin != nil {
		updatedFields["plugin"] = m.plugin
	}
	if m.created_at != nil {
		updatedFields["created_at"] = m.created_at
	}
	if m.updated_at != nil {
		updatedFields["updated_at"] = m.updated_at
	}
	if m.created_by != nil {
		updatedFields["created_by"] = m.created_by
	}
	if m.updated_by != nil {
		updatedFields["updated_by"] = m.updated_by
	}
	return updatedFields
}

// UpdatedFields returns all fields and edges that were changed during this mutation.
func (m *RoleMutation) UpdatedFields() map[string]Value {
	var updatedFields = make(map[string]Value)
	if m.name != nil {
		updatedFields["name"] = m.name
	}
	if m._type != nil {
		updatedFields["type"] = m._type
	}
	if m.created_at != nil {
		updatedFields["created_at"] = m.created_at
	}
	if m.updated_at != nil {
		updatedFields["updated_at"] = m.updated_at
	}
	if m.created_by != nil {
		updatedFields["created_by"] = m.created_by
	}
	if m.updated_by != nil {
		updatedFields["updated_by"] = m.updated_by
	}
	return updatedFields
}

// UpdatedFields returns all fields and edges that were changed during this mutation.
func (m *UserMutation) UpdatedFields() map[string]Value {
	var updatedFields = make(map[string]Value)
	if m.name != nil {
		updatedFields["name"] = m.name
	}
	if m.email != nil {
		updatedFields["email"] = m.email
	}
	if m.created_at != nil {
		updatedFields["created_at"] = m.created_at
	}
	if m.updated_at != nil {
		updatedFields["updated_at"] = m.updated_at
	}
	if m.ref_created_by != nil {
		updatedFields["ref_created_by"] = m.ref_created_by
	}
	if m.created_by != nil {
		updatedFields["created_by"] = m.created_by
	}
	if m.ref_updated_by != nil {
		updatedFields["ref_updated_by"] = m.ref_updated_by
	}
	if m.updated_by != nil {
		updatedFields["updated_by"] = m.updated_by
	}
	if m.role != nil {
		updatedFields["role"] = m.role
	}
	return updatedFields
}
