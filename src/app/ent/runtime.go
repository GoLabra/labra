// Code generated by ent, DO NOT EDIT.

package ent

import (
	"app/ent/migration"
	"app/ent/role"
	"app/ent/schema"
	"app/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	migrationFields := schema.Migration{}.Fields()
	_ = migrationFields
	// migrationDescName is the schema descriptor for name field.
	migrationDescName := migrationFields[1].Descriptor()
	// migration.NameValidator is a validator for the "name" field. It is called by the builders before save.
	migration.NameValidator = migrationDescName.Validators[0].(func(string) error)
	// migrationDescCreatedAt is the schema descriptor for created_at field.
	migrationDescCreatedAt := migrationFields[5].Descriptor()
	// migration.DefaultCreatedAt holds the default value on creation for the created_at field.
	migration.DefaultCreatedAt = migrationDescCreatedAt.Default.(func() time.Time)
	// migrationDescUpdatedAt is the schema descriptor for updated_at field.
	migrationDescUpdatedAt := migrationFields[6].Descriptor()
	// migration.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	migration.DefaultUpdatedAt = migrationDescUpdatedAt.Default.(func() time.Time)
	// migration.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	migration.UpdateDefaultUpdatedAt = migrationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// migrationDescID is the schema descriptor for id field.
	migrationDescID := migrationFields[0].Descriptor()
	// migration.DefaultID holds the default value on creation for the id field.
	migration.DefaultID = migrationDescID.Default.(func() string)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[1].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	// roleDescCreatedAt is the schema descriptor for created_at field.
	roleDescCreatedAt := roleFields[3].Descriptor()
	// role.DefaultCreatedAt holds the default value on creation for the created_at field.
	role.DefaultCreatedAt = roleDescCreatedAt.Default.(func() time.Time)
	// roleDescUpdatedAt is the schema descriptor for updated_at field.
	roleDescUpdatedAt := roleFields[4].Descriptor()
	// role.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	role.DefaultUpdatedAt = roleDescUpdatedAt.Default.(func() time.Time)
	// role.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	role.UpdateDefaultUpdatedAt = roleDescUpdatedAt.UpdateDefault.(func() time.Time)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleFields[0].Descriptor()
	// role.DefaultID holds the default value on creation for the id field.
	role.DefaultID = roleDescID.Default.(func() string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[4].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
}
