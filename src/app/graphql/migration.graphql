extend type Query {
    migrations(where: MigrationWhereInput, orderBy: MigrationOrder, skip: Int, first: Int, last: Int): [Migration!]
    migrationsConnection(where: MigrationWhereInput, orderBy: MigrationOrder, skip: Int, first: Int, last: Int): MigrationConnection!
}

extend type Mutation {
    createMigration(data: CreateMigrationInput!): Migration!
    createManyMigrations(data: [CreateMigrationInput!]!): [Migration]!
    updateMigration(where: MigrationWhereUniqueInput!, data: UpdateMigrationInput!): Migration!
    updateManyMigrations(where: MigrationWhereInput!, data: UpdateMigrationInput!): Int!
    upsertMigration(data: CreateMigrationInput!): Migration!
    upsertManyMigrations(data: [CreateMigrationInput!]!): Int!
    deleteMigration(where: MigrationWhereUniqueInput!): Migration!
    deleteManyMigrations(where: MigrationWhereInput!): Int!
}
extend input CreateMigrationInput {
    createdBy: CreateOneUserInput
    updatedBy: CreateOneUserInput
}
extend input UpdateMigrationInput {
    createdBy: CreateOneUserInput
    updatedBy: CreateOneUserInput
}

input CreateOneMigrationInput {
    create: CreateMigrationInput
    connect: MigrationWhereUniqueInput
}

input CreateManyMigrationInput {
    create: [CreateMigrationInput!]
    connect: [MigrationWhereUniqueInput!]
}
